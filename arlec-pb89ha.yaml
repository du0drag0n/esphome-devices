# Basic Config
substitutions:
  device_name: "arlec-pb89ha"
  name: "ARLEC PB89HA"

esphome:
  name: ${device_name}
  comment: ${name}
  platform: ESP8266
  board: esp01_1m

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

logger:
  # Important! The status LED and button are on the Pins used by UART0,
  # so if you want to use the serial port, you can set it to UART1.
  hardware_uart: UART1

api:
  password: "api_password"

ota:
  password: "b4dea53c16e1c60381ed69380995e03c"

status_led:
  pin:
    number: GPIO1
    inverted: True

sensor:
  - platform: uptime
    name: ${name} Uptime

  - platform: wifi_signal
    name: ${name} Signal
    update_interval: 300s

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO3
      inverted: True
    name: ${name} button
    internal: True
    on_multi_click:
# single click action
      - timing:
          - ON for 40ms to 400ms
          - OFF for at least 330ms
        then:
          - logger.log: "Single Click"
          - switch.toggle: relay_a      
# double click action
      - timing:
          - ON for 40ms to 400ms
          - OFF for 40ms to 300ms
          - ON for 40ms to 400ms
          - OFF for at least 330ms
        then:
          - logger.log: "Double Click"
          - switch.toggle: relay_b        
# triple click action
      - timing:
          - ON for 40ms to 400ms
          - OFF for 40ms to 300ms
          - ON for 40ms to 400ms
          - OFF for 40ms to 300ms
          - ON for 40ms to 400ms
          - OFF for at least 330ms
        then:
          - logger.log: "Triple Click"
          - switch.toggle: relay_c         
# quad click action
      - timing:
          - ON for 40ms to 400ms
          - OFF for 40ms to 300ms
          - ON for 40ms to 400ms
          - OFF for 40ms to 300ms
          - ON for 40ms to 400ms
          - OFF for 40ms to 300ms
          - ON for 40ms to 400ms
          - OFF for at least 50ms
        then:
          - logger.log: "Quad Click"
          - switch.toggle: relay_d       
# long click action - A long press with turn all off if any are on, or will turn all on
      - timing:
          - ON for at least 2s
        then:
          lambda: |-
            if (id(relay_a).state ||
            id(relay_b).state ||
            id(relay_c).state ||
            id(relay_d).state ) {
              id(relay_a).turn_off();
              id(relay_b).turn_off();
              id(relay_c).turn_off();
              id(relay_d).turn_off();
            } else {
              id(relay_a).turn_on();
              id(relay_b).turn_on();
              id(relay_c).turn_on();
              id(relay_d).turn_on();
            }
switch:
  - platform: gpio
    pin: GPIO05
    name: "${name} - A"
    id: relay_a
    restore_mode: always off
    icon: mdi:power-socket-au

  - platform: gpio
    pin: GPIO04
    name: "${name} - B"
    id: relay_b
    restore_mode: always off
    icon: mdi:power-socket-au

  - platform: gpio
    pin: GPIO13
    name: "${name} - C"
    id: relay_c
    restore_mode: always off
    icon: mdi:power-socket-au

  - platform: gpio
    pin: GPIO12
    name: "${name} - D"
    id: relay_d
    restore_mode: always off
    icon: mdi:power-socket-au
